<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="247px" preserveAspectRatio="none" style="width:1392px;height:247px;background:#FFFFFF;" version="1.1" viewBox="0 0 1392 247" width="1392px" zoomAndPan="magnify"><defs/><g><rect fill="#ADD8E6" height="36.4883" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="151" x="10" y="104.7324"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="20" y="128.2676">Green Bar Patterns</text><rect fill="#90EE90" height="36.4883" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="183" x="211" y="20"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="221" y="43.5352">Fake it (till you make it)</text><rect fill="#FFBBCC" height="36.4883" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="393" x="444" y="20"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="369" x="454" y="43.5352">Once you have a borken test return a constant to fix it</text><path d="M394,38.2441 L404,38.2441 C419,38.2441 419,38.2441 434,38.2441 L444,38.2441 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><path d="M161,122.9766 L171,122.9766 C186,122.9766 186,38.2441 201,38.2441 L211,38.2441 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><rect fill="#90EE90" height="36.4883" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="103" x="211" y="76.4883"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="79" x="221" y="100.0234">Triangulate</text><rect fill="#FFBBCC" height="36.4883" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="378" x="364" y="76.4883"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="354" x="374" y="100.0234">Abstract only when you have tow or more examples</text><path d="M314,94.7324 L324,94.7324 C339,94.7324 339,94.7324 354,94.7324 L364,94.7324 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><path d="M161,122.9766 L171,122.9766 C186,122.9766 186,94.7324 201,94.7324 L211,94.7324 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><rect fill="#90EE90" height="36.4883" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="192" x="211" y="132.9766"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="168" x="221" y="156.5117">Obvious implementation</text><rect fill="#FFBBCC" height="36.4883" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="388" x="453" y="132.9766"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="364" x="463" y="156.5117">When having simple operations, just implement them</text><path d="M403,151.2207 L413,151.2207 C428,151.2207 428,151.2207 443,151.2207 L453,151.2207 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><path d="M161,122.9766 L171,122.9766 C186,122.9766 186,151.2207 201,151.2207 L211,151.2207 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><rect fill="#90EE90" height="36.4883" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="110" x="211" y="189.4648"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="221" y="213">One to Many</text><rect fill="#FFBBCC" height="36.4883" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="1009" x="371" y="189.4648"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="985" x="381" y="213">When implementing an operation that works with collections of objects, implement it without collections first, then make it work with collections</text><path d="M321,207.709 L331,207.709 C346,207.709 346,207.709 361,207.709 L371,207.709 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><path d="M161,122.9766 L171,122.9766 C186,122.9766 186,207.709 201,207.709 L211,207.709 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><!--MD5=[64978e48fb000af3067b6bd67906e9e9]
@startmindmap Red Bar Patterns
<style>
mindmapDiagram {
    .green {
        BackgroundColor lightgreen
    }
    .rose {
        BackgroundColor #FFBBCC
    }
    .blue {
        BackgroundColor lightblue
    }
}
</style>
*  Green Bar Patterns <<blue>>
** Fake it (till you make it) <<green>>
*** Once you have a borken test return a constant to fix it <<rose>>
** Triangulate <<green>>
*** Abstract only when you have tow or more examples <<rose>>
** Obvious implementation <<green>>
*** When having simple operations, just implement them <<rose>>
** One to Many <<green>>
*** When implementing an operation that works with collections of objects, implement it without collections first, then make it work with collections <<rose>>

@endmindmap

PlantUML version 1.2022.7(Mon Aug 22 19:01:30 CEST 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: IT
--></g></svg>