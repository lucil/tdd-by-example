<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="473px" preserveAspectRatio="none" style="width:1379px;height:473px;background:#FFFFFF;" version="1.1" viewBox="0 0 1379 473" width="1379px" zoomAndPan="magnify"><defs/><g><rect fill="#ADD8E6" height="36.4883" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="103" x="10" y="217.709"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="79" x="20" y="241.2441">Refactoring</text><rect fill="#D3D3D3" height="36.4883" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="170" x="163" y="20"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="173" y="43.5352">Reconcile Differences</text><rect fill="#FFBBCC" height="36.4883" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="386" x="383" y="20"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="362" x="393" y="43.5352">How do you unify two similar looking pieces of code?</text><rect fill="#90EE90" height="36.4883" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="548" x="819" y="20"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="524" x="829" y="43.5352">Gradually bring the closer and unify them when they are absolutely identical.</text><path d="M769,38.2441 L779,38.2441 C794,38.2441 794,38.2441 809,38.2441 L819,38.2441 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><path d="M333,38.2441 L343,38.2441 C358,38.2441 358,38.2441 373,38.2441 L383,38.2441 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><path d="M113,235.9531 L123,235.9531 C138,235.9531 138,38.2441 153,38.2441 L163,38.2441 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><rect fill="#D3D3D3" height="36.4883" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="126" x="163" y="76.4883"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="173" y="100.0234">Isolate Change</text><rect fill="#FFBBCC" height="36.4883" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="454" x="339" y="76.4883"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="430" x="349" y="100.0234">How do you change one part of a multi-part method or object?</text><rect fill="#90EE90" height="36.4883" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="296" x="843" y="76.4883"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="272" x="853" y="100.0234">First isolate the part that has to change.</text><path d="M793,94.7324 L803,94.7324 C818,94.7324 818,94.7324 833,94.7324 L843,94.7324 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><path d="M289,94.7324 L299,94.7324 C314,94.7324 314,94.7324 329,94.7324 L339,94.7324 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><path d="M113,235.9531 L123,235.9531 C138,235.9531 138,94.7324 153,94.7324 L163,94.7324 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><rect fill="#D3D3D3" height="36.4883" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="111" x="163" y="132.9766"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="87" x="173" y="156.5117">Migrate Data</text><rect fill="#FFBBCC" height="36.4883" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="324" x="324" y="132.9766"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="300" x="334" y="156.5117">How do you move from one representation?</text><rect fill="#90EE90" height="36.4883" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="238" x="698" y="132.9766"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="214" x="708" y="156.5117">Temporarily duplicate the data.</text><path d="M648,151.2207 L658,151.2207 C673,151.2207 673,151.2207 688,151.2207 L698,151.2207 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><path d="M274,151.2207 L284,151.2207 C299,151.2207 299,151.2207 314,151.2207 L324,151.2207 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><path d="M113,235.9531 L123,235.9531 C138,235.9531 138,151.2207 153,151.2207 L163,151.2207 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><rect fill="#D3D3D3" height="36.4883" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="128" x="163" y="189.4648"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="104" x="173" y="213">Extract Method</text><rect fill="#FFBBCC" height="36.4883" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="445" x="341" y="189.4648"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="421" x="351" y="213">How do you make a long, complicated method easier to read?</text><rect fill="#90EE90" height="36.4883" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="511" x="836" y="189.4648"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="487" x="846" y="213">Turn a small part of it into a separate method and call the new method.</text><path d="M786,207.709 L796,207.709 C811,207.709 811,207.709 826,207.709 L836,207.709 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><path d="M291,207.709 L301,207.709 C316,207.709 316,207.709 331,207.709 L341,207.709 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><path d="M113,235.9531 L123,235.9531 C138,235.9531 138,207.709 153,207.709 L163,207.709 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><rect fill="#D3D3D3" height="36.4883" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="118" x="163" y="245.9531"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="173" y="269.4883">Inline Method</text><rect fill="#FFBBCC" height="36.4883" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="552" x="331" y="245.9531"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="528" x="341" y="269.4883">How do you simplify control flows that have become too twisted or scattered?</text><rect fill="#90EE90" height="36.4883" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="378" x="933" y="245.9531"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="354" x="943" y="269.4883">Replace a method invocation with the method itself.</text><path d="M883,264.1973 L893,264.1973 C908,264.1973 908,264.1973 923,264.1973 L933,264.1973 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><path d="M281,264.1973 L291,264.1973 C306,264.1973 306,264.1973 321,264.1973 L331,264.1973 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><path d="M113,235.9531 L123,235.9531 C138,235.9531 138,264.1973 153,264.1973 L163,264.1973 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><rect fill="#D3D3D3" height="36.4883" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="136" x="163" y="302.4414"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="112" x="173" y="325.9766">Extract Interface</text><rect fill="#FFBBCC" height="36.4883" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="502" x="349" y="302.4414"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="478" x="359" y="325.9766">How do you introduce a second implementation of operations in Java?</text><rect fill="#90EE90" height="36.4883" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="390" x="901" y="302.4414"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="366" x="911" y="325.9766">Create an interface containing the shared operations.</text><path d="M851,320.6855 L861,320.6855 C876,320.6855 876,320.6855 891,320.6855 L901,320.6855 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><path d="M299,320.6855 L309,320.6855 C324,320.6855 324,320.6855 339,320.6855 L349,320.6855 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><path d="M113,235.9531 L123,235.9531 C138,235.9531 138,320.6855 153,320.6855 L163,320.6855 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><rect fill="#D3D3D3" height="36.4883" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="116" x="163" y="358.9297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="92" x="173" y="382.4648">Move Method</text><rect fill="#FFBBCC" height="36.4883" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="423" x="329" y="358.9297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="399" x="339" y="382.4648">How do you move a method to the place where it belongs?</text><rect fill="#90EE90" height="36.4883" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="365" x="802" y="358.9297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="341" x="812" y="382.4648">Add it to the class where it belongs then invoke it.</text><path d="M752,377.1738 L762,377.1738 C777,377.1738 777,377.1738 792,377.1738 L802,377.1738 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><path d="M279,377.1738 L289,377.1738 C304,377.1738 304,377.1738 319,377.1738 L329,377.1738 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><path d="M113,235.9531 L123,235.9531 C138,235.9531 138,377.1738 153,377.1738 L163,377.1738 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><rect fill="#D3D3D3" height="36.4883" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="124" x="163" y="415.418"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="173" y="438.9531">Method Object</text><rect fill="#FFBBCC" height="36.4883" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="694" x="337" y="415.418"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="670" x="347" y="438.9531">How do you represent a complicated method that requires several parameters and local variables?</text><rect fill="#90EE90" height="36.4883" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="259" x="1081" y="415.418"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="235" x="1091" y="438.9531">Make an object out of the method.</text><path d="M1031,433.6621 L1041,433.6621 C1056,433.6621 1056,433.6621 1071,433.6621 L1081,433.6621 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><path d="M287,433.6621 L297,433.6621 C312,433.6621 312,433.6621 327,433.6621 L337,433.6621 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><path d="M113,235.9531 L123,235.9531 C138,235.9531 138,433.6621 153,433.6621 L163,433.6621 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><!--MD5=[b6d80f3dba020a56849f57b8d27ab2a5]
@startmindmap Red Bar Patterns
<style>
mindmapDiagram {
    .green {
        BackgroundColor lightgreen
    }
    .rose {
        BackgroundColor #FFBBCC
    }
    .blue {
        BackgroundColor lightblue
    }
    .grey {
        BackgroundColor lightgrey
    }
}
</style>
*  Refactoring <<blue>>
** Reconcile Differences <<grey>>
*** How do you unify two similar looking pieces of code? <<rose>>
**** Gradually bring the closer and unify them when they are absolutely identical. <<green>>
** Isolate Change <<grey>>
*** How do you change one part of a multi-part method or object? <<rose>>
**** First isolate the part that has to change. <<green>>
** Migrate Data <<grey>>
*** How do you move from one representation? <<rose>>
**** Temporarily duplicate the data. <<green>>
** Extract Method <<grey>>
*** How do you make a long, complicated method easier to read? <<rose>>
**** Turn a small part of it into a separate method and call the new method. <<green>>
** Inline Method <<grey>>
*** How do you simplify control flows that have become too twisted or scattered? <<rose>>
**** Replace a method invocation with the method itself. <<green>>
** Extract Interface <<grey>>
*** How do you introduce a second implementation of operations in Java? <<rose>>
**** Create an interface containing the shared operations. <<green>>
** Move Method <<grey>>
*** How do you move a method to the place where it belongs? <<rose>>
**** Add it to the class where it belongs then invoke it. <<green>>
** Method Object <<grey>>
*** How do you represent a complicated method that requires several parameters and local variables? <<rose>>
**** Make an object out of the method. <<green>>

@endmindmap

PlantUML version 1.2022.7(Mon Aug 22 19:01:30 CEST 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: IT
--></g></svg>